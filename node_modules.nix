{ pkgs ? import <nixpkgs> {} }:

with pkgs;
with builtins;

let
  nodejs = pkgs."nodejs-8_x";
  lockedPackages = (fromJSON (readFile ./package-lock.json)).dependencies;
  mkNodeModule = pkgName: props:
    with props;
    let
      splitIntegrity = lib.strings.splitString "-" integrity;
      hashAlg = elemAt splitIntegrity 0;
      hash = elemAt splitIntegrity 1;
    in

    stdenv.mkDerivation {
      inherit version pkgName;
      name = "${pkgName}-${version}";
      src = pkgs.fetchurl {
        url = resolved;
        "${hashAlg}" = hash;
      };

      buildInputs = [ nodejs ];
      phases = [ "unpackPhase" "buildPhase" "installPhase" ];

      buildPhase = ''
        export HOME=$TMPDIR
        npm rebuild
      '';

      installPhase = ''
        mkdir -p $out/node_modules/$pkgName
        cp -r ./ $out/node_modules/$pkgName/
      '';
    };
in

symlinkJoin {
  name = "node_modules";
  paths = lib.mapAttrsToList mkNodeModule lockedPackages;
}

